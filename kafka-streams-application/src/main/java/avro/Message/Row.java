/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro.Message;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Row extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6729007776049728453L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Row\",\"namespace\":\"avro.Message\",\"fields\":[{\"name\":\"uuid\",\"type\":\"string\"},{\"name\":\"userid\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"logtype\",\"type\":\"string\"},{\"name\":\"campaign\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"publisher\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"creative\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"placement\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"product\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"quantity\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"revenue\",\"type\":[\"null\",\"double\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Row> ENCODER =
      new BinaryMessageEncoder<Row>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Row> DECODER =
      new BinaryMessageDecoder<Row>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Row> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Row> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Row>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Row to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Row from a ByteBuffer. */
  public static Row fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence uuid;
  @Deprecated public java.lang.CharSequence userid;
  @Deprecated public long timestamp;
  @Deprecated public java.lang.CharSequence logtype;
  @Deprecated public java.lang.CharSequence campaign;
  @Deprecated public java.lang.CharSequence publisher;
  @Deprecated public java.lang.CharSequence creative;
  @Deprecated public java.lang.CharSequence placement;
  @Deprecated public java.lang.CharSequence product;
  @Deprecated public java.lang.Integer quantity;
  @Deprecated public java.lang.Double revenue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Row() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param userid The new value for userid
   * @param timestamp The new value for timestamp
   * @param logtype The new value for logtype
   * @param campaign The new value for campaign
   * @param publisher The new value for publisher
   * @param creative The new value for creative
   * @param placement The new value for placement
   * @param product The new value for product
   * @param quantity The new value for quantity
   * @param revenue The new value for revenue
   */
  public Row(java.lang.CharSequence uuid, java.lang.CharSequence userid, java.lang.Long timestamp, java.lang.CharSequence logtype, java.lang.CharSequence campaign, java.lang.CharSequence publisher, java.lang.CharSequence creative, java.lang.CharSequence placement, java.lang.CharSequence product, java.lang.Integer quantity, java.lang.Double revenue) {
    this.uuid = uuid;
    this.userid = userid;
    this.timestamp = timestamp;
    this.logtype = logtype;
    this.campaign = campaign;
    this.publisher = publisher;
    this.creative = creative;
    this.placement = placement;
    this.product = product;
    this.quantity = quantity;
    this.revenue = revenue;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return userid;
    case 2: return timestamp;
    case 3: return logtype;
    case 4: return campaign;
    case 5: return publisher;
    case 6: return creative;
    case 7: return placement;
    case 8: return product;
    case 9: return quantity;
    case 10: return revenue;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.CharSequence)value$; break;
    case 1: userid = (java.lang.CharSequence)value$; break;
    case 2: timestamp = (java.lang.Long)value$; break;
    case 3: logtype = (java.lang.CharSequence)value$; break;
    case 4: campaign = (java.lang.CharSequence)value$; break;
    case 5: publisher = (java.lang.CharSequence)value$; break;
    case 6: creative = (java.lang.CharSequence)value$; break;
    case 7: placement = (java.lang.CharSequence)value$; break;
    case 8: product = (java.lang.CharSequence)value$; break;
    case 9: quantity = (java.lang.Integer)value$; break;
    case 10: revenue = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.CharSequence getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.CharSequence value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'userid' field.
   * @return The value of the 'userid' field.
   */
  public java.lang.CharSequence getUserid() {
    return userid;
  }

  /**
   * Sets the value of the 'userid' field.
   * @param value the value to set.
   */
  public void setUserid(java.lang.CharSequence value) {
    this.userid = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'logtype' field.
   * @return The value of the 'logtype' field.
   */
  public java.lang.CharSequence getLogtype() {
    return logtype;
  }

  /**
   * Sets the value of the 'logtype' field.
   * @param value the value to set.
   */
  public void setLogtype(java.lang.CharSequence value) {
    this.logtype = value;
  }

  /**
   * Gets the value of the 'campaign' field.
   * @return The value of the 'campaign' field.
   */
  public java.lang.CharSequence getCampaign() {
    return campaign;
  }

  /**
   * Sets the value of the 'campaign' field.
   * @param value the value to set.
   */
  public void setCampaign(java.lang.CharSequence value) {
    this.campaign = value;
  }

  /**
   * Gets the value of the 'publisher' field.
   * @return The value of the 'publisher' field.
   */
  public java.lang.CharSequence getPublisher() {
    return publisher;
  }

  /**
   * Sets the value of the 'publisher' field.
   * @param value the value to set.
   */
  public void setPublisher(java.lang.CharSequence value) {
    this.publisher = value;
  }

  /**
   * Gets the value of the 'creative' field.
   * @return The value of the 'creative' field.
   */
  public java.lang.CharSequence getCreative() {
    return creative;
  }

  /**
   * Sets the value of the 'creative' field.
   * @param value the value to set.
   */
  public void setCreative(java.lang.CharSequence value) {
    this.creative = value;
  }

  /**
   * Gets the value of the 'placement' field.
   * @return The value of the 'placement' field.
   */
  public java.lang.CharSequence getPlacement() {
    return placement;
  }

  /**
   * Sets the value of the 'placement' field.
   * @param value the value to set.
   */
  public void setPlacement(java.lang.CharSequence value) {
    this.placement = value;
  }

  /**
   * Gets the value of the 'product' field.
   * @return The value of the 'product' field.
   */
  public java.lang.CharSequence getProduct() {
    return product;
  }

  /**
   * Sets the value of the 'product' field.
   * @param value the value to set.
   */
  public void setProduct(java.lang.CharSequence value) {
    this.product = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'revenue' field.
   * @return The value of the 'revenue' field.
   */
  public java.lang.Double getRevenue() {
    return revenue;
  }

  /**
   * Sets the value of the 'revenue' field.
   * @param value the value to set.
   */
  public void setRevenue(java.lang.Double value) {
    this.revenue = value;
  }

  /**
   * Creates a new Row RecordBuilder.
   * @return A new Row RecordBuilder
   */
  public static avro.Message.Row.Builder newBuilder() {
    return new avro.Message.Row.Builder();
  }

  /**
   * Creates a new Row RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Row RecordBuilder
   */
  public static avro.Message.Row.Builder newBuilder(avro.Message.Row.Builder other) {
    return new avro.Message.Row.Builder(other);
  }

  /**
   * Creates a new Row RecordBuilder by copying an existing Row instance.
   * @param other The existing instance to copy.
   * @return A new Row RecordBuilder
   */
  public static avro.Message.Row.Builder newBuilder(avro.Message.Row other) {
    return new avro.Message.Row.Builder(other);
  }

  /**
   * RecordBuilder for Row instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Row>
    implements org.apache.avro.data.RecordBuilder<Row> {

    private java.lang.CharSequence uuid;
    private java.lang.CharSequence userid;
    private long timestamp;
    private java.lang.CharSequence logtype;
    private java.lang.CharSequence campaign;
    private java.lang.CharSequence publisher;
    private java.lang.CharSequence creative;
    private java.lang.CharSequence placement;
    private java.lang.CharSequence product;
    private java.lang.Integer quantity;
    private java.lang.Double revenue;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(avro.Message.Row.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userid)) {
        this.userid = data().deepCopy(fields()[1].schema(), other.userid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.logtype)) {
        this.logtype = data().deepCopy(fields()[3].schema(), other.logtype);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.campaign)) {
        this.campaign = data().deepCopy(fields()[4].schema(), other.campaign);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.publisher)) {
        this.publisher = data().deepCopy(fields()[5].schema(), other.publisher);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.creative)) {
        this.creative = data().deepCopy(fields()[6].schema(), other.creative);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.placement)) {
        this.placement = data().deepCopy(fields()[7].schema(), other.placement);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.product)) {
        this.product = data().deepCopy(fields()[8].schema(), other.product);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.quantity)) {
        this.quantity = data().deepCopy(fields()[9].schema(), other.quantity);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.revenue)) {
        this.revenue = data().deepCopy(fields()[10].schema(), other.revenue);
        fieldSetFlags()[10] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Row instance
     * @param other The existing instance to copy.
     */
    private Builder(avro.Message.Row other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userid)) {
        this.userid = data().deepCopy(fields()[1].schema(), other.userid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.logtype)) {
        this.logtype = data().deepCopy(fields()[3].schema(), other.logtype);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.campaign)) {
        this.campaign = data().deepCopy(fields()[4].schema(), other.campaign);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.publisher)) {
        this.publisher = data().deepCopy(fields()[5].schema(), other.publisher);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.creative)) {
        this.creative = data().deepCopy(fields()[6].schema(), other.creative);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.placement)) {
        this.placement = data().deepCopy(fields()[7].schema(), other.placement);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.product)) {
        this.product = data().deepCopy(fields()[8].schema(), other.product);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.quantity)) {
        this.quantity = data().deepCopy(fields()[9].schema(), other.quantity);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.revenue)) {
        this.revenue = data().deepCopy(fields()[10].schema(), other.revenue);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.CharSequence getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setUuid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userid' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserid() {
      return userid;
    }

    /**
      * Sets the value of the 'userid' field.
      * @param value The value of 'userid'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setUserid(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.userid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userid' field has been set.
      * @return True if the 'userid' field has been set, false otherwise.
      */
    public boolean hasUserid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userid' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearUserid() {
      userid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setTimestamp(long value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'logtype' field.
      * @return The value.
      */
    public java.lang.CharSequence getLogtype() {
      return logtype;
    }

    /**
      * Sets the value of the 'logtype' field.
      * @param value The value of 'logtype'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setLogtype(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.logtype = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'logtype' field has been set.
      * @return True if the 'logtype' field has been set, false otherwise.
      */
    public boolean hasLogtype() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'logtype' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearLogtype() {
      logtype = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'campaign' field.
      * @return The value.
      */
    public java.lang.CharSequence getCampaign() {
      return campaign;
    }

    /**
      * Sets the value of the 'campaign' field.
      * @param value The value of 'campaign'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setCampaign(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.campaign = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'campaign' field has been set.
      * @return True if the 'campaign' field has been set, false otherwise.
      */
    public boolean hasCampaign() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'campaign' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearCampaign() {
      campaign = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'publisher' field.
      * @return The value.
      */
    public java.lang.CharSequence getPublisher() {
      return publisher;
    }

    /**
      * Sets the value of the 'publisher' field.
      * @param value The value of 'publisher'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setPublisher(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.publisher = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'publisher' field has been set.
      * @return True if the 'publisher' field has been set, false otherwise.
      */
    public boolean hasPublisher() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'publisher' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearPublisher() {
      publisher = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'creative' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreative() {
      return creative;
    }

    /**
      * Sets the value of the 'creative' field.
      * @param value The value of 'creative'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setCreative(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.creative = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'creative' field has been set.
      * @return True if the 'creative' field has been set, false otherwise.
      */
    public boolean hasCreative() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'creative' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearCreative() {
      creative = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'placement' field.
      * @return The value.
      */
    public java.lang.CharSequence getPlacement() {
      return placement;
    }

    /**
      * Sets the value of the 'placement' field.
      * @param value The value of 'placement'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setPlacement(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.placement = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'placement' field has been set.
      * @return True if the 'placement' field has been set, false otherwise.
      */
    public boolean hasPlacement() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'placement' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearPlacement() {
      placement = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'product' field.
      * @return The value.
      */
    public java.lang.CharSequence getProduct() {
      return product;
    }

    /**
      * Sets the value of the 'product' field.
      * @param value The value of 'product'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setProduct(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.product = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'product' field has been set.
      * @return True if the 'product' field has been set, false otherwise.
      */
    public boolean hasProduct() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'product' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearProduct() {
      product = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public java.lang.Integer getQuantity() {
      return quantity;
    }

    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setQuantity(java.lang.Integer value) {
      validate(fields()[9], value);
      this.quantity = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearQuantity() {
      quantity = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'revenue' field.
      * @return The value.
      */
    public java.lang.Double getRevenue() {
      return revenue;
    }

    /**
      * Sets the value of the 'revenue' field.
      * @param value The value of 'revenue'.
      * @return This builder.
      */
    public avro.Message.Row.Builder setRevenue(java.lang.Double value) {
      validate(fields()[10], value);
      this.revenue = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'revenue' field has been set.
      * @return True if the 'revenue' field has been set, false otherwise.
      */
    public boolean hasRevenue() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'revenue' field.
      * @return This builder.
      */
    public avro.Message.Row.Builder clearRevenue() {
      revenue = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Row build() {
      try {
        Row record = new Row();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.userid = fieldSetFlags()[1] ? this.userid : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.logtype = fieldSetFlags()[3] ? this.logtype : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.campaign = fieldSetFlags()[4] ? this.campaign : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.publisher = fieldSetFlags()[5] ? this.publisher : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.creative = fieldSetFlags()[6] ? this.creative : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.placement = fieldSetFlags()[7] ? this.placement : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.product = fieldSetFlags()[8] ? this.product : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.quantity = fieldSetFlags()[9] ? this.quantity : (java.lang.Integer) defaultValue(fields()[9]);
        record.revenue = fieldSetFlags()[10] ? this.revenue : (java.lang.Double) defaultValue(fields()[10]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Row>
    WRITER$ = (org.apache.avro.io.DatumWriter<Row>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Row>
    READER$ = (org.apache.avro.io.DatumReader<Row>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
